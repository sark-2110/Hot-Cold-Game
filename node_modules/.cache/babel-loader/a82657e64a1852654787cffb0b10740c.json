{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\hot-cold-game\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Grid, Paper, Typography, Divider } from '@material-ui/core';\nimport Form from './components/Form';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateAppState = guess => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: {\n        height: \"100vh\"\n      },\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      items: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        padding: \"50px\"\n      },\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"HOT or COLD\"), /*#__PURE__*/React.createElement(Divider, {\n      style: {\n        margin: \"20px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      returnGuessToApp: value => this.updateAppState(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/hot-cold-game/src/App.js"],"names":["React","Grid","Paper","Typography","Divider","Form","App","Component","updateAppState","guess","render","height","padding","margin","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAcC,KAAd,EAAoBC,UAApB,EAA+BC,OAA/B,QAA6C,mBAA7C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAEhCC,cAFgC,GAEbC,KAAF,IAAY,CAE5B,CAJ+B;AAAA;;AAMhCC,EAAAA,MAAM,GAAE;AACR,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAvB;AAAyC,MAAA,OAAO,EAAC,QAAjD;AAA0D,MAAA,UAAU,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAd;AAAgC,MAAA,SAAS,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,YAAY,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG;AAAV,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,gBAAgB,EAAGC,KAAK,IAAI,KAAKN,cAAL,CAAoBM,KAApB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADF,CADF;AAWC;;AAlB+B;;AAqBlC,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Grid,Paper,Typography,Divider} from '@material-ui/core';\nimport Form from './components/Form';\n\nclass App extends React.Component {\n\n  updateAppState = ( guess ) =>{\n    \n  }\n\n  render(){\n  return (\n    <Grid container style={{height:\"100vh\"}} justify=\"center\" alignItems=\"center\"> \n      <Grid items xs={3}>\n        <Paper style={{padding:\"50px\"}} elevation={6}>\n          <Typography align=\"center\" variant=\"h2\" gutterBottom>HOT or COLD</Typography>\n          <Divider style={{margin : \"20px 0\" }}></Divider>\n          <Form returnGuessToApp={ value => this.updateAppState(value)} />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}