{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\hot-cold-game\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Form from './components/Form';\nimport Progress from './components/Progress';\nimport Info from './components/Info';\nimport { getInitialState } from './utils/Random';\nimport { getFeedback } from './utils/Random';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = getInitialState();\n\n    this.resetGame = () => this.setState(getInitialState());\n\n    this.updateAppState = guess => {\n      const {\n        actual\n      } = this.state;\n      const absDiff = Math.abs(guess - actual);\n      const {\n        feedbackMessage,\n        feedbackColor\n      } = getFeedback(absDiff);\n      this.setState(prevState => ({\n        guess,\n        allGuesses: [...prevState.allGuesses, {\n          guess,\n          feedbackColor\n        }],\n        attempt: prevState.attempt + 1,\n        feedbackMessage,\n        block: absDiff === 0\n      }));\n    };\n  }\n\n  render() {\n    const {\n      allGuesses,\n      feedbackMessage,\n      block,\n      attempt,\n      show\n    } = this.state;\n    const guessList = allGuesses.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, item.guess)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mx-auto\",\n      style: {\n        width: \"20rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"card-title display-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Hot or Cold\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `feedback ${feedbackMessage[0].toLowerCase()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, feedbackMessage)), /*#__PURE__*/React.createElement(Form, {\n      block: block,\n      returnGuessToApp: value => this.updateAppState(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Progress, {\n      feedbackMessage: feedbackMessage,\n      attempt: attempt,\n      guessList: guessList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info\",\n      onClick: this.resetGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Reset Game\"), /*#__PURE__*/React.createElement(Info, {\n      show: show,\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/hot-cold-game/src/App.js"],"names":["React","Component","Form","Progress","Info","getInitialState","getFeedback","App","state","resetGame","setState","updateAppState","guess","actual","absDiff","Math","abs","feedbackMessage","feedbackColor","prevState","allGuesses","attempt","block","render","show","guessList","map","item","index","width","toLowerCase","value","handleClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from './components/Form';\nimport Progress from './components/Progress';\nimport Info from './components/Info';\nimport {getInitialState} from './utils/Random';\nimport {getFeedback} from './utils/Random';\n\nimport './App.css';\n\nclass App extends Component {\n  state = getInitialState();\n\n  resetGame = () => this.setState(getInitialState());\n\n  updateAppState = (guess) => {\n    const { actual } = this.state;\n\n    const absDiff = Math.abs(guess - actual);\n    const { feedbackMessage, feedbackColor } = getFeedback(absDiff);\n\n    this.setState(prevState => ({\n      guess,\n      allGuesses: [...prevState.allGuesses, { guess, feedbackColor }],\n      attempt: prevState.attempt + 1,\n      feedbackMessage,\n      block: absDiff === 0,\n    }));\n  }\n\n  render() {\n    const { allGuesses, feedbackMessage, block, attempt, show } = this.state;\n\n    const guessList = allGuesses.map((item, index) => (\n      <li key={index}>\n        <span>{item.guess}</span>\n      </li>\n    ));\n\n    return (\n      <div className=\"container-fluid text-center\">\n        <div className=\"card mx-auto\" style={{width: \"20rem\"}}>\n          <div className=\"card-body\">\n            <h1 className=\"card-title display-3\">Hot or Cold</h1>\n            <hr />\n            <div className={`feedback ${feedbackMessage[0].toLowerCase()}`}>\n              <h2 className=\"feedback-text\">{feedbackMessage}</h2>\n            </div>\n            <Form block={block} returnGuessToApp={value => this.updateAppState(value)} />\n            <Progress feedbackMessage={feedbackMessage} attempt={attempt} guessList={guessList} />\n            <button type=\"button\" className=\"btn btn-info\" onClick={this.resetGame}>Reset Game</button>\n            <Info show={show} onClose={this.handleClose} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}